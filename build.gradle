allprojects {
	apply plugin: 'java'
	apply plugin: 'idea'

	sourceCompatibility = 1.6

	version = "2.0"

	repositories {
		mavenCentral()
		jcenter()

		flatDir name: 'TeamCityDev', dir: hasProperty('TeamCityDev') ? TeamCity : System.getenv('TeamCityDev')
	}

	configurations {
		plugin {
			description = "Dependencies included with the plugin"
		}

		compile.extendsFrom(plugin)
	}

	jar {
		appendix = "${rootProject.name}"
	}
}

task assemblePlugin(type: Zip, dependsOn: test) {
	into ('server') {
		from tasks.getByPath(':server:assemblePlugin').outputs.files
	}
	from ('.') {
		include 'teamcity-plugin.xml'
	}
	into ('agent') {
		from tasks.getByPath(':agent:assemblePlugin').outputs.files
	}
}

assemblePlugin.dependsOn([':server:assemblePlugin', ':agent:assemblePlugin'])

project(':agent') {
	dependencies {
		plugin project(':common')
		plugin 'net.sourceforge.jtds:jtds:1.2.7'

		compile name: 'common-api'
		compile name: 'agent-api'

		compile 'org.jetbrains:annotations:13.+'
		compile 'log4j:log4j:1.2.+'

		testCompile 'org.testng:testng:6.8.21'
		testCompile 'org.mockito:mockito-core:1.+'
	}

	test {
		useTestNG()
	}
}

project(':server') {
	dependencies {
		plugin project(':common')

		compile name: 'common-api'
		compile name: 'server-api'

		compile 'org.jetbrains:annotations:13.+'
		compile 'log4j:log4j:1.2.+'

		testCompile 'org.testng:testng:6.8.21'
		testCompile 'commons-collections:commons-collections:3.2.+'
	}

	test {
		useTestNG()
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
}
